generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model recipes_ingredients {
  id            Int       @id @default(autoincrement())
  recipeId      Int
  ingredientsId Int
  recipes       recipes   @relation(fields: [recipeId], references: [id])
  ingredients   ingredients @relation(fields: [ingredientsId], references: [id])
}

model ingredients {
  id       Int                 @id @default(autoincrement())
  name     String
  category String
  recipes_ingredients recipes_ingredients[]
}

model users {
  id       Int             @id @default(autoincrement())
  username String          @unique
  email    String          @unique
  password String
  users_recipes users_recipes[]
  preferences   preferences?
  isadmin Boolean
}

model users_recipes {
  id               Int     @id @default(autoincrement())
  userId           Int
  recipeId         Int
  rating           Int? 
  reviewMsg        String? 
  users            users   @relation(fields: [userId], references: [id])
  recipes          recipes @relation(fields: [recipeId], references: [id])
}

model preferences {
  id              Int   @id @default(autoincrement())
  userId          Int      @unique
  glutenFree      Boolean  @default(false)
  ketogenic       Boolean  @default(false)
  lactoVegetarian Boolean  @default(false)
  ovoVegetarian   Boolean  @default(false)
  vegan           Boolean  @default(false)
  pescetarian     Boolean  @default(false)
  paleo           Boolean  @default(false)
  primal          Boolean  @default(false)
  lowFODMAP       Boolean  @default(false)
  whole30         Boolean  @default(false)
  users           users @relation(fields: [userId], references: [id])
  recipes         recipe_preference[]
}

model recipes {
  id                Int                 @id @default(autoincrement())
  title              String
  instructions     String
  servings          Int
  imageurl           String? 
  users_recipes    users_recipes[]
  recipes_ingredients recipes_ingredients[]
  ratingsAndReviews ratingsAndReviews[]
  glutenFree          Boolean @default(false)
  ketogenic           Boolean @default(false)
  lactoVegetarian     Boolean @default(false)
  ovoVegetarian       Boolean @default(false)
  vegan               Boolean @default(false)
  pescetarian         Boolean @default(false)
  paleo               Boolean @default(false)
  primal              Boolean @default(false)
  lowFODMAP           Boolean @default(false)
  whole30             Boolean @default(false)
  preferences         recipe_preference[]
}


model recipe_preference {
  recipeId      Int
  preferenceId  Int

  recipe        recipes     @relation(fields: [recipeId], references: [id])
  preference    preferences @relation(fields: [preferenceId], references: [id])

  @@id([recipeId, preferenceId])
}



model ratingsAndReviews {
  id         Int     @id @default(autoincrement())
  recipeId   Int
  rating     Float
  reviewMsg  String
  recipe     recipes @relation(fields: [recipeId], references: [id])
}